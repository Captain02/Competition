<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hanming.oa.dao.DocumentMapper">
  <resultMap id="BaseResultMap" type="com.hanming.oa.model.Document">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="projectId" jdbcType="INTEGER" property="projectId" />
    <result column="documentName" jdbcType="VARCHAR" property="documentName" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="createPeople" jdbcType="INTEGER" property="createPeople" />
    <result column="createTime" jdbcType="VARCHAR" property="createTime" />
    <result column="keyword" jdbcType="VARCHAR" property="keyword" />
    <result column="fileName" jdbcType="VARCHAR" property="fileName" />
    <result column="enclosure" jdbcType="VARCHAR" property="enclosure" />
    <result column="descs" jdbcType="VARCHAR" property="descs" />
  </resultMap>
  <sql id="Base_Column_List">
    id, projectId, documentName, type, createPeople, createTime, keyword, fileName, enclosure, 
    descs
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from document
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from document
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.hanming.oa.model.Document">
    insert into document (id, projectId, documentName, 
      type, createPeople, createTime, 
      keyword, fileName, enclosure, 
      descs)
    values (#{id,jdbcType=INTEGER}, #{projectId,jdbcType=INTEGER}, #{documentName,jdbcType=VARCHAR}, 
      #{type,jdbcType=VARCHAR}, #{createPeople,jdbcType=INTEGER}, #{createTime,jdbcType=VARCHAR}, 
      #{keyword,jdbcType=VARCHAR}, #{fileName,jdbcType=VARCHAR}, #{enclosure,jdbcType=VARCHAR}, 
      #{descs,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hanming.oa.model.Document">
    insert into document
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="projectId != null">
        projectId,
      </if>
      <if test="documentName != null">
        documentName,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="createPeople != null">
        createPeople,
      </if>
      <if test="createTime != null">
        createTime,
      </if>
      <if test="keyword != null">
        keyword,
      </if>
      <if test="fileName != null">
        fileName,
      </if>
      <if test="enclosure != null">
        enclosure,
      </if>
      <if test="descs != null">
        descs,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="projectId != null">
        #{projectId,jdbcType=INTEGER},
      </if>
      <if test="documentName != null">
        #{documentName,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="createPeople != null">
        #{createPeople,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="keyword != null">
        #{keyword,jdbcType=VARCHAR},
      </if>
      <if test="fileName != null">
        #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="enclosure != null">
        #{enclosure,jdbcType=VARCHAR},
      </if>
      <if test="descs != null">
        #{descs,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hanming.oa.model.Document">
    update document
    <set>
      <if test="projectId != null">
        projectId = #{projectId,jdbcType=INTEGER},
      </if>
      <if test="documentName != null">
        documentName = #{documentName,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="createPeople != null">
        createPeople = #{createPeople,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        createTime = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="keyword != null">
        keyword = #{keyword,jdbcType=VARCHAR},
      </if>
      <if test="fileName != null">
        fileName = #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="enclosure != null">
        enclosure = #{enclosure,jdbcType=VARCHAR},
      </if>
      <if test="descs != null">
        descs = #{descs,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hanming.oa.model.Document">
    update document
    set projectId = #{projectId,jdbcType=INTEGER},
      documentName = #{documentName,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      createPeople = #{createPeople,jdbcType=INTEGER},
      createTime = #{createTime,jdbcType=VARCHAR},
      keyword = #{keyword,jdbcType=VARCHAR},
      fileName = #{fileName,jdbcType=VARCHAR},
      enclosure = #{enclosure,jdbcType=VARCHAR},
      descs = #{descs,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <!-- List<DocumentDisplay> list(@Param("type")String type, @Param("documentName")String documentName); -->
  <select id="list" resultType="DocumentDisplay">
  	select 
  	do.id,do.documentName,do.type,tu.name AS createPeople,do.createTime
  	from document do
  	LEFT JOIN t_user tu ON tu.id=do.createPeople
  	LEFT JOIN project pt ON pt.id=do.projectId
  	<where>
  		do.projectId = #{projectId}
  		<if test="type != '类型'">
  			AND do.type = #{type}
  		</if>
  		<if test="documentName != '文档名'">
  			AND do.documentName = #{documentName}
  		</if>
  	</where>
  </select>
  
  <!-- DocumentDetailed detailedById(Integer id); -->
  <select id="detailedById" resultType="DocumentDetailed">
  	select do.id,do.projectId,do.documentName,do.type,tu.name AS createPeople,do.createTime,do.keyword,do.fileName,do.enclosure,do.descs
  	from document do
	LEFT JOIN t_user tu ON do.createPeople=tu.id
	WHERE do.id = #{id}
  </select>
  
</mapper>