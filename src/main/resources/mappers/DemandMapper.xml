<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hanming.oa.dao.DemandMapper">
  <resultMap id="BaseResultMap" type="com.hanming.oa.model.Demand">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="projectId" jdbcType="INTEGER" property="projectId" />
    <result column="demandName" jdbcType="VARCHAR" property="demandName" />
    <result column="createPeopele" jdbcType="INTEGER" property="createPeopele" />
    <result column="source" jdbcType="VARCHAR" property="source" />
    <result column="grade" jdbcType="VARCHAR" property="grade" />
    <result column="stage" jdbcType="VARCHAR" property="stage" />
    <result column="state" jdbcType="VARCHAR" property="state" />
    <result column="assignor" jdbcType="INTEGER" property="assignor" />
    <result column="workTime" jdbcType="VARCHAR" property="workTime" />
    <result column="enclosure" jdbcType="VARCHAR" property="enclosure" />
    <result column="fileName" jdbcType="VARCHAR" property="fileName" />
    <result column="createTime" jdbcType="VARCHAR" property="createTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.hanming.oa.model.DemandWithBLOBs">
    <result column="descs" jdbcType="LONGVARCHAR" property="descs" />
    <result column="AcceptanceStand" jdbcType="LONGVARCHAR" property="acceptancestand" />
  </resultMap>
  <sql id="Base_Column_List">
    id, projectId, demandName, createPeopele, source, grade, stage, state, assignor, 
    workTime, enclosure, fileName, createTime
  </sql>
  <sql id="Blob_Column_List">
    descs, AcceptanceStand
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from demand
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from demand
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.hanming.oa.model.DemandWithBLOBs">
    insert into demand (id, projectId, demandName, 
      createPeopele, source, grade, 
      stage, state, assignor, 
      workTime, enclosure, fileName, 
      createTime, descs, AcceptanceStand
      )
    values (#{id,jdbcType=INTEGER}, #{projectId,jdbcType=INTEGER}, #{demandName,jdbcType=VARCHAR}, 
      #{createPeopele,jdbcType=INTEGER}, #{source,jdbcType=VARCHAR}, #{grade,jdbcType=VARCHAR}, 
      #{stage,jdbcType=VARCHAR}, #{state,jdbcType=VARCHAR}, #{assignor,jdbcType=INTEGER}, 
      #{workTime,jdbcType=VARCHAR}, #{enclosure,jdbcType=VARCHAR}, #{fileName,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=VARCHAR}, #{descs,jdbcType=LONGVARCHAR}, #{acceptancestand,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.hanming.oa.model.DemandWithBLOBs">
    insert into demand
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="projectId != null">
        projectId,
      </if>
      <if test="demandName != null">
        demandName,
      </if>
      <if test="createPeopele != null">
        createPeopele,
      </if>
      <if test="source != null">
        source,
      </if>
      <if test="grade != null">
        grade,
      </if>
      <if test="stage != null">
        stage,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="assignor != null">
        assignor,
      </if>
      <if test="workTime != null">
        workTime,
      </if>
      <if test="enclosure != null">
        enclosure,
      </if>
      <if test="fileName != null">
        fileName,
      </if>
      <if test="createTime != null">
        createTime,
      </if>
      <if test="descs != null">
        descs,
      </if>
      <if test="acceptancestand != null">
        AcceptanceStand,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="projectId != null">
        #{projectId,jdbcType=INTEGER},
      </if>
      <if test="demandName != null">
        #{demandName,jdbcType=VARCHAR},
      </if>
      <if test="createPeopele != null">
        #{createPeopele,jdbcType=INTEGER},
      </if>
      <if test="source != null">
        #{source,jdbcType=VARCHAR},
      </if>
      <if test="grade != null">
        #{grade,jdbcType=VARCHAR},
      </if>
      <if test="stage != null">
        #{stage,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="assignor != null">
        #{assignor,jdbcType=INTEGER},
      </if>
      <if test="workTime != null">
        #{workTime,jdbcType=VARCHAR},
      </if>
      <if test="enclosure != null">
        #{enclosure,jdbcType=VARCHAR},
      </if>
      <if test="fileName != null">
        #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="descs != null">
        #{descs,jdbcType=LONGVARCHAR},
      </if>
      <if test="acceptancestand != null">
        #{acceptancestand,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hanming.oa.model.DemandWithBLOBs">
    update demand
    <set>
      <if test="projectId != null">
        projectId = #{projectId,jdbcType=INTEGER},
      </if>
      <if test="demandName != null">
        demandName = #{demandName,jdbcType=VARCHAR},
      </if>
      <if test="createPeopele != null">
        createPeopele = #{createPeopele,jdbcType=INTEGER},
      </if>
      <if test="source != null">
        source = #{source,jdbcType=VARCHAR},
      </if>
      <if test="grade != null">
        grade = #{grade,jdbcType=VARCHAR},
      </if>
      <if test="stage != null">
        stage = #{stage,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=VARCHAR},
      </if>
      <if test="assignor != null">
        assignor = #{assignor,jdbcType=INTEGER},
      </if>
      <if test="workTime != null">
        workTime = #{workTime,jdbcType=VARCHAR},
      </if>
      <if test="enclosure != null">
        enclosure = #{enclosure,jdbcType=VARCHAR},
      </if>
      <if test="fileName != null">
        fileName = #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        createTime = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="descs != null">
        descs = #{descs,jdbcType=LONGVARCHAR},
      </if>
      <if test="acceptancestand != null">
        AcceptanceStand = #{acceptancestand,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.hanming.oa.model.DemandWithBLOBs">
    update demand
    set projectId = #{projectId,jdbcType=INTEGER},
      demandName = #{demandName,jdbcType=VARCHAR},
      createPeopele = #{createPeopele,jdbcType=INTEGER},
      source = #{source,jdbcType=VARCHAR},
      grade = #{grade,jdbcType=VARCHAR},
      stage = #{stage,jdbcType=VARCHAR},
      state = #{state,jdbcType=VARCHAR},
      assignor = #{assignor,jdbcType=INTEGER},
      workTime = #{workTime,jdbcType=VARCHAR},
      enclosure = #{enclosure,jdbcType=VARCHAR},
      fileName = #{fileName,jdbcType=VARCHAR},
      createTime = #{createTime,jdbcType=VARCHAR},
      descs = #{descs,jdbcType=LONGVARCHAR},
      AcceptanceStand = #{acceptancestand,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hanming.oa.model.Demand">
    update demand
    set projectId = #{projectId,jdbcType=INTEGER},
      demandName = #{demandName,jdbcType=VARCHAR},
      createPeopele = #{createPeopele,jdbcType=INTEGER},
      source = #{source,jdbcType=VARCHAR},
      grade = #{grade,jdbcType=VARCHAR},
      stage = #{stage,jdbcType=VARCHAR},
      state = #{state,jdbcType=VARCHAR},
      assignor = #{assignor,jdbcType=INTEGER},
      workTime = #{workTime,jdbcType=VARCHAR},
      enclosure = #{enclosure,jdbcType=VARCHAR},
      fileName = #{fileName,jdbcType=VARCHAR},
      createTime = #{createTime,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>