<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hanming.oa.dao.BBSTopicMapper">
  <resultMap id="BaseResultMap" type="com.hanming.oa.model.BBSTopic">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="sketch" jdbcType="VARCHAR" property="sketch" />
    <result column="text" jdbcType="VARCHAR" property="text" />
    <result column="userId" jdbcType="INTEGER" property="userId" />
    <result column="date" jdbcType="TIMESTAMP" property="date" />
    <result column="like" jdbcType="INTEGER" property="like" />
    <result column="collection" jdbcType="INTEGER" property="collection" />
    <result column="comment" jdbcType="INTEGER" property="comment" />
  </resultMap>
  
  <resultMap type="com.hanming.oa.model.BBSDisplayTopic" id="DisplayTopicMap">
  	<id column="id" jdbcType="INTEGER" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="sketch" jdbcType="VARCHAR" property="sketch" />
    <result column="date" jdbcType="TIMESTAMP" property="date" />
    <result column="like" jdbcType="INTEGER" property="like" />
    <result column="collection" jdbcType="INTEGER" property="collection" />
    <result column="comment" jdbcType="INTEGER" property="comment" />
    <result column="userId" jdbcType="INTEGER" property="userId" />
    <result column="userHeadFile" jdbcType="VARCHAR" property="userHeadFile" />
    <result column="userName" jdbcType="VARCHAR" property="userName" />
    
    <collection property="labelName" javaType="ArrayList" column="id" ofType="String" select="getLabelNameByTopicId" />
    
  </resultMap>
  
  <resultMap type="com.hanming.oa.model.BBSDetailedTopic" id="DetailedTopicMap">
  	<id column="id" jdbcType="INTEGER" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="sketch" jdbcType="VARCHAR" property="sketch" />
    <result column="date" jdbcType="TIMESTAMP" property="date" />
    <result column="like" jdbcType="INTEGER" property="like" />
    <result column="collection" jdbcType="INTEGER" property="collection" />
    <result column="comment" jdbcType="INTEGER" property="comment" />
    <result column="userId" jdbcType="INTEGER" property="userId" />
    <result column="userHeadFile" jdbcType="VARCHAR" property="userHeadFile" />
    <result column="userName" jdbcType="VARCHAR" property="userName" />
    <result column="text" jdbcType="VARCHAR" property="text" />
    
    <collection property="labelName" javaType="ArrayList" column="id" ofType="String" select="getLabelNameByTopicId" />
    
    <!-- <collection property="comments" javaType="ArrayList" column="id" ofType="Comments" select="getCommentsByTopicId" /> -->
  </resultMap>
  
  <resultMap type="com.hanming.oa.model.Comments" id="CommentsMap">
  	<id column="id" jdbcType="INTEGER" property="id" />
    <result column="userId" jdbcType="INTEGER" property="userId" />
    <result column="userName" jdbcType="VARCHAR" property="userName" />
    <result column="userHeadFile" jdbcType="VARCHAR" property="userHeadFile" />
    <result column="date" jdbcType="VARCHAR" property="date" />
    <result column="text" jdbcType="VARCHAR" property="text" />
    <result column="repliesId" jdbcType="INTEGER" property="repliesId" />
    <result column="repliesUserId" jdbcType="INTEGER" property="repliesUserId" />
    <result column="repliesUserName" jdbcType="VARCHAR" property="repliesUserName" />
    <result column="repliesUserHeadFile" jdbcType="VARCHAR" property="repliesUserHeadFile" />
    
    <collection property="comments" javaType="ArrayList" column="id" ofType="Comments" select="getCommentsByRepliceId" />
    
  </resultMap>
  
  <sql id="Base_Column_List">
    id, title, sketch, text, userId, date, `like`, collection, comment
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from bbstopic
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from bbstopic
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyProperty="id" parameterType="com.hanming.oa.model.BBSTopic">
    insert into bbstopic (id, title, sketch, 
      text, userId, date, 
      `like`, collection, comment
      )
    values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{sketch,jdbcType=VARCHAR}, 
      #{text,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, #{date,jdbcType=TIMESTAMP}, 
      #{like,jdbcType=INTEGER}, #{collection,jdbcType=INTEGER}, #{comment,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" keyProperty="id" parameterType="com.hanming.oa.model.BBSTopic">
    insert into bbstopic
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="sketch != null">
        sketch,
      </if>
      <if test="text != null">
        text,
      </if>
      <if test="userId != null">
        userId,
      </if>
      <if test="date != null">
        date,
      </if>
      <if test="like != null">
        `like`,
      </if>
      <if test="collection != null">
        collection,
      </if>
      <if test="comment != null">
        comment,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="sketch != null">
        #{sketch,jdbcType=VARCHAR},
      </if>
      <if test="text != null">
        #{text,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="date != null">
        #{date,jdbcType=TIMESTAMP},
      </if>
      <if test="like != null">
        #{like,jdbcType=INTEGER},
      </if>
      <if test="collection != null">
        #{collection,jdbcType=INTEGER},
      </if>
      <if test="comment != null">
        #{comment,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hanming.oa.model.BBSTopic">
    update bbstopic
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="sketch != null">
        sketch = #{sketch,jdbcType=VARCHAR},
      </if>
      <if test="text != null">
        text = #{text,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        userId = #{userId,jdbcType=INTEGER},
      </if>
      <if test="date != null">
        date = #{date,jdbcType=TIMESTAMP},
      </if>
      <if test="like != null">
        `like` = #{like,jdbcType=INTEGER},
      </if>
      <if test="collection != null">
        collection = #{collection,jdbcType=INTEGER},
      </if>
      <if test="comment != null">
        comment = #{comment,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hanming.oa.model.BBSTopic">
    update bbstopic
    set title = #{title,jdbcType=VARCHAR},
      sketch = #{sketch,jdbcType=VARCHAR},
      text = #{text,jdbcType=VARCHAR},
      userId = #{userId,jdbcType=INTEGER},
      date = #{date,jdbcType=TIMESTAMP},
      `like` = #{like,jdbcType=INTEGER},
      collection = #{collection,jdbcType=INTEGER},
      comment = #{comment,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!-- List<BBSDisplayTopic> selectDisplayTopic(); -->
  <select id="selectDisplayTopic" resultMap="DisplayTopicMap">
  	SELECT DISTINCT
	bt.id,bt.title,bt.sketch,bt.text,bt.date,bt.`like`,bt.collection,tu.id as userId,tu.`name` as userName,tu.headFile as userHeadFile
	FROM BBSTopic bt
	LEFT JOIN t_user tu ON tu.id=bt.userId
	LEFT JOIN bbslabeltopic blt ON blt.topicId=bt.id
	LEFT JOIN bbslabel bl ON bl.id=blt.labelId
	<where>
	 <if test="labelId != 0">
	      bl.id = #{labelId}
	 </if>
     <if test="isByMyId != 0">
         AND tu.id = #{isByMyId}
     </if>
	</where>
  </select>
  
  <!-- getLabelNameByTopicId -->
  <select id="getLabelNameByTopicId" resultType="String">
  	select BBSLabel.`name` 
  	from BBSLabel
  	LEFT JOIN bbslabeltopic ON bbslabeltopic.labelId = bbslabel.id
	LEFT JOIN bbstopic ON bbstopic.id = bbslabeltopic.topicId
	WHERE topicId= #{topicId}
  </select>

  <!-- BBSDetailedTopic selectBBSDetailedTopic(Integer i); -->
  <select id="selectBBSDetailedTopic" resultMap="DetailedTopicMap" parameterType="Integer">
  	SELECT
	 bt.id,bt.title,bt.sketch,bt.date,bt.`like`,bt.collection,bt.`comment`,bt.text,tu.`name` AS userName,tu.id AS userId ,tu.headFile AS userHeadFile
	FROM bbstopic bt
	LEFT JOIN t_user tu ON tu.id=bt.userId
	WHERE bt.id = #{topicId}
  </select>
  
  <!-- getCommentsByRepliceId -->
  <select id="getCommentsByRepliceId" resultType="Comments">
  	SELECT
	br.id,tu.id AS userId,tu.`name` AS userName,tu.headFile AS userHeadFile,br.date,br.text,br.repliesId,tus.id AS repliesUserId,tus.`name` AS repliesUserName,tus.headFile AS repliesUserHeadFile
	FROM bbsreplies br
	LEFT JOIN bbsreplies brs ON brs.repliesId=br.id
	LEFT JOIN bbstopic bt ON bt.id=br.TopicId
	LEFT JOIN t_user tus ON tus.id=br.repliseUserId
	LEFT JOIN t_user tu ON tu.id=br.userId
	
	WHERE br.repliesId = #{id}
  </select>
  
  
  <!-- getCommentsByTopicId -->
  <select id="getCommentsByTopicId" resultMap="CommentsMap">
  	SELECT DISTINCT
	br.id,tu.id AS userId,tu.`name` AS userName,tu.headFile AS userHeadFile,br.date,br.text,br.repliesId,tus.id AS repliesUserId,tus.`name` AS repliesUserName,tus.headFile AS repliesUserHeadFile
	FROM bbsreplies br
	LEFT JOIN bbsreplies brs ON brs.repliesId=br.id
	LEFT JOIN bbstopic bt ON bt.id=br.TopicId
	LEFT JOIN t_user tus ON tus.id=br.repliseUserId
	LEFT JOIN t_user tu ON tu.id=br.userId
	
	WHERE br.TopicId = #{topicId} AND br.repliesId = 0
  </select>
  
  <!-- void updateLikeSubtractOne(@Param("userId") Integer userId,@Param("topicId") Integer topicId); -->
  <update id="updateLikeSubtractOne">
  	update bbstopic set `like` = `like`-1 WHERE userId = #{userId} AND id = #{topicId}
  </update>
  
  <!-- void updateLikeAddOne(@Param("userId") Integer userId,@Param("topicId") Integer topicId); -->
  <update id="updateLikeAddOne">
  	update bbstopic set `like` = `like`+1 WHERE userId = #{userId} AND id = #{topicId}
  </update>
  
  <!-- void updateCollectionSubstractOne(@Param("userId") Integer userId,@Param("topicId") Integer topicId); -->
  <update id="updateCollectionSubstractOne">
  	update bbstopic set `collection` = `collection`-1 WHERE userId = #{userId} AND id = #{topicId}
  </update>
  
  <!-- void updateCollectionAddOne(@Param("userId") Integer userId,@Param("topicId") Integer topicId); -->
  <update id="updateCollectionAddOne">
  	update bbstopic set `collection` = `collection`+1 WHERE userId = #{userId} AND id = #{topicId}
  </update>
  
  <!-- void deleByTopicIdList(List<Integer> topicIds); -->
  <delete id="deleByTopicIdList">
  	delete from bbstopic 
	where id IN
    <foreach item="item" index="index" collection="list"  open="(" separator="," close=")"> 
    #{item} 
    </foreach>
  </delete>
  
</mapper>