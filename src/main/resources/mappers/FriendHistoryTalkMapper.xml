<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hanming.oa.dao.FriendHistoryTalkMapper">
  <resultMap id="BaseResultMap" type="com.hanming.oa.model.FriendHistoryTalk">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="userId" jdbcType="INTEGER" property="userid" />
    <result column="fromId" jdbcType="INTEGER" property="fromid" />
    <result column="toId" jdbcType="INTEGER" property="toid" />
    <result column="date" jdbcType="VARCHAR" property="date" />
  </resultMap>
  <resultMap id="MessageWithUser" type="com.hanming.oa.model.Message"> 
  	 <id column="id" jdbcType="INTEGER" property="id" />
     <result column="text" jdbcType="VARCHAR" property="text" />
     <result column="date" jdbcType="VARCHAR" property="date" />
  
     <association property="user" javaType="User">
     	<id column="userId" property="id"></id>
     	<result column="username" property="username"></result>
     	<result column="name" property="name"></result>
     	<result column="sex" property="sex"></result>
     	<result column="phone" property="phone"></result>
     	<result column="qq" property="qq"></result>
     	<result column="edu" property="edu"></result>
     	<result column="headFile" property="headFile"></result>
     </association>
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.hanming.oa.model.FriendHistoryTalk">
    <result column="text" jdbcType="LONGVARCHAR" property="text" />
  </resultMap>
  <sql id="Base_Column_List">
    id, userId, fromId, toId, date
  </sql>
  <sql id="Blob_Column_List">
    text
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from friendhistorytalk
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from friendhistorytalk
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.hanming.oa.model.FriendHistoryTalk">
    insert into friendhistorytalk (id, userId, fromId, 
      toId, date, text
      )
    values (#{id,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{fromid,jdbcType=INTEGER}, 
      #{toid,jdbcType=INTEGER}, #{date,jdbcType=VARCHAR}, #{text,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.hanming.oa.model.FriendHistoryTalk">
    insert into friendhistorytalk
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userid != null">
        userId,
      </if>
      <if test="fromid != null">
        fromId,
      </if>
      <if test="toid != null">
        toId,
      </if>
      <if test="date != null">
        date,
      </if>
      <if test="text != null">
        text,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="fromid != null">
        #{fromid,jdbcType=INTEGER},
      </if>
      <if test="toid != null">
        #{toid,jdbcType=INTEGER},
      </if>
      <if test="date != null">
        #{date,jdbcType=VARCHAR},
      </if>
      <if test="text != null">
        #{text,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hanming.oa.model.FriendHistoryTalk">
    update friendhistorytalk
    <set>
      <if test="userid != null">
        userId = #{userid,jdbcType=INTEGER},
      </if>
      <if test="fromid != null">
        fromId = #{fromid,jdbcType=INTEGER},
      </if>
      <if test="toid != null">
        toId = #{toid,jdbcType=INTEGER},
      </if>
      <if test="date != null">
        date = #{date,jdbcType=VARCHAR},
      </if>
      <if test="text != null">
        text = #{text,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.hanming.oa.model.FriendHistoryTalk">
    update friendhistorytalk
    set userId = #{userid,jdbcType=INTEGER},
      fromId = #{fromid,jdbcType=INTEGER},
      toId = #{toid,jdbcType=INTEGER},
      date = #{date,jdbcType=VARCHAR},
      text = #{text,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hanming.oa.model.FriendHistoryTalk">
    update friendhistorytalk
    set userId = #{userid,jdbcType=INTEGER},
      fromId = #{fromid,jdbcType=INTEGER},
      toId = #{toid,jdbcType=INTEGER},
      date = #{date,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!-- List<Message> list(@Param("fromUserId")Integer fromUserId, @Param("friendId")Integer friendId); -->
  <select id="list" resultMap="MessageWithUser">
   SELECT
	fht.id,fht.text,fht.date,tu.id AS userId,tu.username,tu.`name`,tu.sex,tu.phone,tu.qq,tu.edu,tu.headFile
	FROM friendhistorytalk fht
	LEFT JOIN t_user tu ON fht.fromId=tu.id
	WHERE (fht.fromId=#{fromUserId} OR fht.fromId=#{friendId}) AND (fht.toId = #{fromUserId} OR fht.toId=#{friendId})  AND fht.userId=#{fromUserId}
  </select>

  <!-- void deleByMyIdAndFriendId(@Param("fromUserId")Integer fromUserId, @Param("friendId")Integer friendId); -->
  <delete id="deleByMyIdAndFriendId">
   delete from friendhistorytalk fht
   WHERE (fht.fromId=#{fromUserId} OR fht.fromId=#{friendId}) AND (fht.toId = #{fromUserId} OR fht.toId=#{friendId})
  </delete>
  
	
</mapper>