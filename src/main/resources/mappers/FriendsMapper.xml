<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hanming.oa.dao.FriendsMapper">
  <resultMap id="BaseResultMap" type="com.hanming.oa.model.Friends">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="myId" jdbcType="INTEGER" property="myid" />
    <result column="friendId" jdbcType="INTEGER" property="friendid" />
  </resultMap>
  <sql id="Base_Column_List">
    id, myId, friendId
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from friends
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from friends
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.hanming.oa.model.Friends">
    insert into friends (id, myId, friendId
      )
    values (#{id,jdbcType=INTEGER}, #{myid,jdbcType=INTEGER}, #{friendid,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.hanming.oa.model.Friends">
    insert into friends
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="myid != null">
        myId,
      </if>
      <if test="friendid != null">
        friendId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="myid != null">
        #{myid,jdbcType=INTEGER},
      </if>
      <if test="friendid != null">
        #{friendid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hanming.oa.model.Friends">
    update friends
    <set>
      <if test="myid != null">
        myId = #{myid,jdbcType=INTEGER},
      </if>
      <if test="friendid != null">
        friendId = #{friendid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hanming.oa.model.Friends">
    update friends
    set myId = #{myid,jdbcType=INTEGER},
      friendId = #{friendid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <!-- 带有部门和角色的返回值 -->
  <resultMap id="WithDeptAndRole" type="com.hanming.oa.model.User">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="username" jdbcType="VARCHAR" property="username" />
		<result column="password" jdbcType="VARCHAR" property="password" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="sex" jdbcType="VARCHAR" property="sex" />
		<result column="phone" jdbcType="VARCHAR" property="phone" />
		<result column="qq" jdbcType="VARCHAR" property="qq" />
		<result column="edu" jdbcType="VARCHAR" property="edu" />
		<result column="headFile" jdbcType="VARCHAR" property="headFile" />
		<result column="oldHeadFile" jdbcType="VARCHAR" property="oldHeadFile" />
		<!-- 联合查询出部门的字段 -->
		<association property="department" javaType="Department">
			<id column="tdId" property="id" />
			<result column="tdName" property="name"/>
		</association>
		
		<association property="role" javaType="Role" >
			<id column="trId" property="id"/>
			<result column="trName" property="name"/>
		</association>
  </resultMap>
  
  <!-- 带有部门和角色的查询sql -->
	<sql id="WithDepAndRole">
		tu.oldHeadFile,tu.headFile,tu.id,tu.username,tu.`password`,tu.`name`,tu.sex,tu.phone,tu.qq,tu.edu,td.id as tdId,tr.id as trId, td.`name` as tdName,tr.`name` as trName
	</sql>
	
	<!-- 连表语句 -->
	<sql id="linkSql">
		FROM t_user tu
		LEFT JOIN t_department_user tdu ON tdu.userId = tu.id
		LEFT JOIN t_department td ON td.id = tdu.departmentId
		LEFT JOIN t_user_role tur ON tu.id = tur.userId
		LEFT JOIN t_role tr ON tur.roleId = tr.id
		LEFT JOIN friends fr ON fr.friendId = tu.id
	</sql>
	
  <!-- List<User> listByUserId(Integer userId); -->
  <select id="listByUserId" resultMap="WithDeptAndRole">
		select
		<include refid="WithDepAndRole" />
		<include refid="linkSql" />
		WHERE fr.myId = #{userId}
  </select>
  
</mapper>