<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hanming.oa.dao.ProjectTeamMapper">
  <resultMap id="BaseResultMap" type="com.hanming.oa.model.ProjectTeam">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="userId" jdbcType="INTEGER" property="userid" />
    <result column="projectId" jdbcType="INTEGER" property="projectid" />
    <result column="joinTime" jdbcType="VARCHAR" property="jointime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, userId, projectId, joinTime
  </sql>
  <!-- 带有部门和角色的查询sql -->
	<sql id="WithDepAndRole">
		tu.oldHeadFile,tu.headFile,tu.id,tu.username,tu.`password`,tu.`name`,tu.sex,tu.phone,tu.qq,tu.edu,td.id as tdId,tr.id as trId, td.`name` as tdName,tr.`name` as trName
	</sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from projectteam
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from projectteam
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.hanming.oa.model.ProjectTeam">
    insert into projectteam (id, userId, projectId, 
      joinTime)
    values (#{id,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{projectid,jdbcType=INTEGER}, 
      #{jointime,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hanming.oa.model.ProjectTeam">
    insert into projectteam
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userid != null">
        userId,
      </if>
      <if test="projectid != null">
        projectId,
      </if>
      <if test="jointime != null">
        joinTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="projectid != null">
        #{projectid,jdbcType=INTEGER},
      </if>
      <if test="jointime != null">
        #{jointime,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hanming.oa.model.ProjectTeam">
    update projectteam
    <set>
      <if test="userid != null">
        userId = #{userid,jdbcType=INTEGER},
      </if>
      <if test="projectid != null">
        projectId = #{projectid,jdbcType=INTEGER},
      </if>
      <if test="jointime != null">
        joinTime = #{jointime,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hanming.oa.model.ProjectTeam">
    update projectteam
    set userId = #{userid,jdbcType=INTEGER},
      projectId = #{projectid,jdbcType=INTEGER},
      joinTime = #{jointime,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <!-- List<User> listByProjectId(@Param("projectId")Integer projectId,@Param("userName")String userName); -->
  <select id="listByProjectId" resultType="UserByProjectId">
  	SELECT
  	ptt.id AS projectTeamId,tu.id,tu.`name`, tr.`name` AS roleName,ptt.joinTime
	FROM
	projectteam ptt 
	LEFT JOIN t_user tu ON tu.id=ptt.userId
	LEFT JOIN t_user_role tur ON tu.id = tur.userId
	LEFT JOIN t_role tr ON tur.roleId = tr.id
	<where>
		ptt.projectId = #{projectId}
		<if test="userName != '姓名'">
			AND tu.`name`=#{userName}
		</if>
	</where>
  </select>
  
  <!-- void inserList(@Param("projectId")Integer projectId, @Param("idsIntList")List<Integer> idsIntList); -->
  <insert id="inserList">
  	insert into projectteam (userId,projectId)
  	values
  	<foreach collection="idsIntList" item="ids" separator=",">  
            (#{ids},#{projectId})  
    </foreach> 
  </insert>
  
</mapper>