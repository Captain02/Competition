package com.hanming.oa.controller;

import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.activiti.engine.HistoryService;
import org.activiti.engine.TaskService;
import org.activiti.engine.history.HistoricTaskInstance;
import org.activiti.engine.impl.identity.Authentication;
import org.activiti.engine.task.Comment;
import org.activiti.engine.task.Task;
import org.apache.shiro.SecurityUtils;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.github.pagehelper.PageHelper;
import com.github.pagehelper.PageInfo;
import com.hanming.oa.Tool.Msg;
import com.hanming.oa.model.Holiday;
import com.hanming.oa.model.UserHolidayByHolidayId;
import com.hanming.oa.service.HolidayService;
import com.hanming.oa.service.MyTaskService;

@Controller
@RequestMapping("/admin/myTask")
public class MyTaskController {
	private static final Logger logger = LoggerFactory.getLogger(UserController.class);

	@Autowired
	TaskService taskService;
	@Autowired
	HolidayService holidayService;
	@Autowired
	HistoryService historyService;
	@Autowired
	MyTaskService MyTaskService;

	// 查询指派给我的假期审批
	@RequestMapping(value = "/myHolidayTask", method = RequestMethod.GET)
	public String list(@RequestParam(value = "pn", defaultValue = "1") Integer pn,
			@RequestParam(value = "name", defaultValue = "") String name, Model model) {
		String username = (String) SecurityUtils.getSubject().getSession().getAttribute("username");
		PageInfo<Holiday> pageInfo = null;
		PageHelper.startPage(pn, 8);
		List<Holiday> list = new ArrayList<>();
		List<Task> Tasks = taskService.createTaskQuery().taskAssignee(username).list();
		for (Task task : Tasks) {
			Holiday holiday = holidayService.selectHolidayByProcessInstanceId(task.getProcessInstanceId());
			list.add(holiday);
		}

		pageInfo = new PageInfo<Holiday>(list, 5);

		model.addAttribute("pageInfo", pageInfo);
		logger.info(username + "=====查询指派给我的假期审批");
		return "myTask/myHolidayTask";
	}

	// 转发到批注页面
	@RequestMapping(value = "/examinationPage/{holidayId}")
	public String examinationPage(@PathVariable("holidayId") Integer holidayId, Model model) {
		UserHolidayByHolidayId userHolidayByHolidayId = holidayService.selectHolidayByHolidayId(holidayId);

		// 根据流程实例ID查询任务对象
		Task task = taskService.createTaskQuery() // 创建任务查询
				.processInstanceId(userHolidayByHolidayId.getProcessinstanceid())// 根据流程实例Id查询当前任务
				.singleResult();

		// 根据任务ID查询历史任务流程
		HistoricTaskInstance hti = historyService.createHistoricTaskInstanceQuery().taskId(task.getId()).singleResult();

		// 封装审批记录
		List<Comment> commentList = null;
		if (hti != null) {
			commentList = taskService.getProcessInstanceComments(hti.getProcessInstanceId());
			// 集合元素反转
			Collections.reverse(commentList);
		}

		model.addAttribute("comment", commentList);
		model.addAttribute("userHolidayByHolidayId", userHolidayByHolidayId);
		logger.info(SecurityUtils.getSubject().getSession().getAttribute("username") + "=====跳转审批假条页面");

		return "myTask/holidayExamination";
	}

	// 同意请假
	@ResponseBody
	@RequestMapping(value = "/agreeExamination", method = RequestMethod.POST)
	public Msg agreeExamination(UserHolidayByHolidayId userHolidayByHolidayId,
			@RequestParam("nowComment") String nowComment, @RequestParam("id") String holidayId) {

		//int i = MyTaskService.agreeExamination(userHolidayByHolidayId,nowComment,holidayId);
		int i=1;
		if (i==1) {
			return Msg.success();
			
		}
		return Msg.fail();
		
	}
}
