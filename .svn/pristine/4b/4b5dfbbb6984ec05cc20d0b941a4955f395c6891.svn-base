package com.hanming.oa.service;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.activiti.engine.RuntimeService;
import org.activiti.engine.TaskService;
import org.activiti.engine.runtime.ProcessInstance;
import org.activiti.engine.task.Task;
import org.apache.shiro.SecurityUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.web.multipart.MultipartFile;

import com.hanming.oa.dao.HolidayMapper;
import com.hanming.oa.dao.UserHolidayMapper;
import com.hanming.oa.model.Holiday;
import com.hanming.oa.model.UserHoliday;
import com.hanming.oa.model.UserHolidayByHolidayId;

@Service
public class HolidayService {

	@Autowired
	HolidayMapper holidayMapper;
	@Autowired
	UserHolidayMapper userHolidayMapper;
	@Autowired
	RuntimeService runtimeService;
	@Autowired
	TaskService taskService;

	public int insertHoliday(Holiday holiday) {
		int i = holidayMapper.insertSelective(holiday);
		return i;
	}

	public void insertUserHoliday(UserHoliday userHoliday) {
		userHolidayMapper.insertSelective(userHoliday);
	}

	public List<Holiday> list() {
		List<Holiday> list = holidayMapper.list();
		return list;
	}

	public void updateHoliday(Holiday holiday) {
		holidayMapper.updateByPrimaryKeySelective(holiday);
	}

	//我要请假
	@Transactional
	public void addholiday(String persons, MultipartFile file, Holiday holiday) {
		Map<String, Object> variables = new HashMap<String, Object>();
		variables.put("Ass1", SecurityUtils.getSubject().getSession().getAttribute("username"));
		if (!("".equals(persons))) {
			if (persons.contains("-")) {
				String[] personsStr = persons.split("-");
				for (int i = 0; i < personsStr.length; i++) {
					variables.put("Ass" + (i + 2), personsStr[i]);
				}
			}
		}

		// 添加相关数据
		holiday.setTest("审核中");
		if (file != null || file.getOriginalFilename() != null || !("".equals(file.getOriginalFilename()))) {
			holiday.setEnclosure("E:\\testuoload\\" + file.getOriginalFilename());
		}
		UserHoliday userHoliday = new UserHoliday();
		userHoliday.setUserid((Integer) SecurityUtils.getSubject().getSession().getAttribute("id"));
		insertHoliday(holiday);
		userHoliday.setHolidayid(holiday.getId());
		insertUserHoliday(userHoliday);
		// 启动流程
		variables.put("holidayId", holiday.getId());
		// 启动流程
		ProcessInstance pi = runtimeService.startProcessInstanceByKey("helloword", variables);
		// 根据流程实例Id查询任务
		Task task = taskService.createTaskQuery().processInstanceId(pi.getProcessInstanceId()).singleResult();
		// 完成 学生填写请假单任务
		taskService.complete(task.getId());
		// 修改状态
		holiday.setProcessinstanceid(pi.getProcessInstanceId());
		updateHoliday(holiday);
	}

	public UserHolidayByHolidayId selectHolidayByHolidayId(Integer holidayId) {
		UserHolidayByHolidayId userHolidayByHolidayId = holidayMapper.selectHolidayByHolidayId(holidayId);
		return userHolidayByHolidayId;
	}

	public Holiday selectHolidayByProcessInstanceId(String processInstanceId) {
		Holiday holiday = holidayMapper.selectHolidayByProcessInstanceId(processInstanceId);
		return holiday;
	}
	
}
