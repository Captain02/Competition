package com.hanming.oa.controller;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.activiti.engine.RuntimeService;
import org.activiti.engine.TaskService;
import org.activiti.engine.runtime.ProcessInstance;
import org.activiti.engine.task.Task;
import org.apache.shiro.SecurityUtils;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartFile;

import com.github.pagehelper.PageHelper;
import com.github.pagehelper.PageInfo;
import com.hanming.oa.model.Department;
import com.hanming.oa.model.Holiday;
import com.hanming.oa.model.User;
import com.hanming.oa.model.UserHoliday;
import com.hanming.oa.service.HolidayService;
import com.hanming.oa.service.UserService;

@Controller
@RequestMapping("/admin/holiday")
public class HolidayController {
	private static final Logger logger = LoggerFactory.getLogger(HolidayController.class);
	
	@Autowired
	UserService userService;
	@Autowired
	HolidayService holidayService;
	@Autowired
	RuntimeService runtimeService;
	@Autowired
	TaskService taskService;

	// 请假列表
	@RequestMapping(value = "/list", method = RequestMethod.GET)
	public String list(@RequestParam(value = "pn", defaultValue = "1") Integer pn,
			@RequestParam(value = "name", defaultValue = "") String name, Model model) {
		PageInfo<Holiday> pageInfo = null;
		PageHelper.startPage(pn, 8);
		List<Holiday> list = null;
		if ("".equals(name)) {
			list = holidayService.list();
		} else {
			//list = holidayService.listLikeName(name);
		}
		pageInfo = new PageInfo<Holiday>(list, 5);

		model.addAttribute("pageInfo", pageInfo);
		logger.info(SecurityUtils.getSubject().getSession().getAttribute("username") + "=====执行请假列表");
		return "holiday/holiday";
	}

	// 我要请假页面
	@RequestMapping(value = "/add", method = RequestMethod.GET)
	public String addPage(Model model) {
		List<User> list = userService.listNotStaff();
		model.addAttribute("user", list);
		return "holiday/add";
	}

	// 我要请假
	@RequestMapping(value = "/add", method = RequestMethod.POST)
	public String add(MultipartFile file, @RequestParam("persons") String persons, Holiday holiday) {
		Map<String, Object> variables = new HashMap<String, Object>();
		if (!("".equals(persons))) {
			if (persons.contains("-")) {
				String[] personsStr = persons.split("-");
				for (int i = 0; i < personsStr.length; i++) {
					variables.put("Ass" + (i + 1), personsStr[i]);
				}
			}
		}

		// 添加相关数据
		holiday.setTest("审核中");
		if (file != null || file.getOriginalFilename() != null || !("".equals(file.getOriginalFilename()))) {
			holiday.setEnclosure("E:\\testuoload\\" + file.getOriginalFilename());
		}
		UserHoliday userHoliday = new UserHoliday();
		userHoliday.setUserid((Integer) SecurityUtils.getSubject().getSession().getAttribute("id"));
		int holidayId = holidayService.insertHoliday(holiday);
		userHoliday.setHolidayid(holidayId);
		holidayService.insertUserHoliday(userHoliday);
		// 启动流程
		variables.put("holidayId", holidayId);
		// 启动流程
		ProcessInstance pi = runtimeService.startProcessInstanceByKey("helloword", variables);
		// 根据流程实例Id查询任务
		Task task = taskService.createTaskQuery().processInstanceId(pi.getProcessInstanceId()).singleResult();
		// 完成 学生填写请假单任务
		taskService.complete(task.getId());
		// 修改状态
		holiday.setProcessinstanceid(pi.getProcessInstanceId());
		holidayService.insertHoliday(holiday);
		return "holiday/add";
	}
}
